---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tmo-contour-networking-sa
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: tmo-contour-networking-psp
  annotations:
    seccomp.security.alpha.kubernetes.io/allowedProfileNames: 'docker/default'
    apparmor.security.beta.kubernetes.io/allowedProfileNames: 'runtime/default'
    seccomp.security.alpha.kubernetes.io/defaultProfileName:  'docker/default'
    apparmor.security.beta.kubernetes.io/defaultProfileName:  'runtime/default'
spec:
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  allowedCapabilities:
    - '*'
  # Allow core volume types.
  hostNetwork: true
  hostPorts:
    - min: 0
      max: 65535
  hostIPC: true
  hostPID: true
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  runAsUser:
    # Require the container to run without root privileges.
    rule: 'RunAsAny'
  seLinux:
    # This policy assumes the nodes are using AppArmor rather than SELinux.
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'RunAsAny'
  fsGroup:
    rule: 'RunAsAny'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: psp:tmo-contour-networking-psp
rules:
  - apiGroups:
      - extensions
    resourceNames:
      - tmo-contour-networking-psp
    resources:
      - podsecuritypolicies
    verbs:
      - use
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: psp:tmo-contour-networking-psp
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: psp:tmo-contour-networking-psp
subjects:
  - kind: ServiceAccount
    name: tmo-contour-networking-sa
